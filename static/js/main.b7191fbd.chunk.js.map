{"version":3,"sources":["store/models/common.ts","store/models/index.ts","store/models/room.ts","store/index.ts","assets/img/bg-home.png","pages/Home/index.tsx","modules/utils.ts","modules/socket.ts","modules/event.ts","modules/rtc/media.ts","modules/rtc/helpers.ts","modules/rtc/peer.ts","modules/rtc/index.ts","components/layout/PageTemplate/index.tsx","pages/Room/containers/SocketContainer.tsx","pages/Room/containers/GateContainer.tsx","pages/Room/containers/ChatContainer.tsx","pages/Room/components/PipVideo/index.tsx","pages/Room/index.tsx","App.tsx","index.tsx"],"names":["common","createModel","state","selectors","slice","createSelector","reducers","increment","payload","effects","dispatch","incrementAsync","count","models","room","isEnteredRoom","isConnectedSocket","userInfo","participants","videos","chatList","localVideoState","find","info","userId","updateSocketConnectionState","updateEnteredRoomState","setParticipants","arr","values","setUserInfo","addVideo","push","updateVideoEnabled","forEach","video","videoEnabled","enabled","addChat","store","init","plugins","immerPlugin","selectPlugin","select","Home","history","useHistory","handleEnterRoom","useCallback","roomId","randomWord","join","getRandomRoomId","h","color","w","textAlign","src","bgImage","alt","mt","mb","fontSize","colorScheme","size","variant","onClick","socket","io","senderId","sendMessage","type","body","to","data","findSocketId","send","console","log","socketId","Object","keys","key","event","EventEmitter","Media","RTCPeerConnection","window","RTCSessionDescription","RTCIceCandidate","Peer","localStream","peers","peerConnectionOptions","urls","credential","username","constraints","a","navigator","mediaDevices","getUserMedia","this","Promise","_","reject","targetUserId","peer","createPeerConnection","createOffer","pc","onicecandidate","candidate","label","sdpMLineIndex","id","sdpMid","ontrack","stream","streams","emit","onremovetrack","onaddstream","onremovestream","oniceconnectionstatechange","iceGatheringState","iceConnectionState","addTrack","then","SDP","setLocalDescription","peerType","sdp","catch","error","offerSdp","setRemoteDescription","createAnswer","message","getPeer","iceCandidate","addIceCandidate","getTracks","track","addStream","getVideoTracks","getAudioTracks","PageTemplate","children","className","SocketContainer","useSelector","useDispatch","onGateIn","onJoinUser","onLeaveUser","onMessage","bindSocket","on","useEffect","setupBaseInfo","MEDIA_CONSTRAINTS","audio","width","ideal","height","frameRate","facingMode","GateContainer","videoRef","useRef","inputRef","nickName","current","value","uuidv4","profileImg","localStorage","setItem","alert","handleKeyDown","e","preventDefault","srcObject","defaultValue","getItem","flex","direction","justifyContent","alignItems","borderRadius","overflow","autoPlay","ref","placeholder","maxLength","onKeyDown","required","ChatContainer","listWrapRef","textRef","handleScrollToBottom","$listWrap","scrollTop","scrollHeight","handleSendMessage","isMine","setTimeout","handleKeyUp","shiftKey","findParticipantInfo","margin","bg","boxShadow","padding","map","i","cn","mine","background","resize","onKeyUp","PipVideo","audioEnabled","as","px","minWidth","aria-label","disabled","icon","IoMdMicOff","Room","useParams","handleCamera","mute","unmute","handleMic","handleExit","confirm","location","href","signaling","joinUserId","startRtcConnection","length","getLocalStream","mediaInfo","gridCount","useMemo","templateColumns","gap","spacing","IoVideocam","IoVideocamOff","IoMdMic","Phone","basename","process","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7191fbd.chunk.js","sourcesContent":["import { createModel } from '@rematch/core';\nimport { RootModel } from './';\n\nexport const common = createModel<RootModel>()({\n  state: 0,\n  selectors: (slice, createSelector) => ({\n    state() {\n      return slice;\n    },\n  }),\n  reducers: {\n    increment(state, payload: number) {\n      return state + payload;\n    },\n  },\n  effects: (dispatch) => ({\n    incrementAsync(payload: number, state) {\n      dispatch.count.increment(payload);\n    },\n  }),\n});\n","import { Models } from '@rematch/core';\nimport { common } from './common';\nimport { room } from './room';\n\nexport interface RootModel extends Models<RootModel> {\n  common: typeof common;\n  room: typeof room;\n}\n\nexport const models: RootModel = { common, room };\n","import { createModel } from '@rematch/core';\nimport { RootModel } from './';\nimport { values } from 'lodash-es';\n\ninterface VideoState {\n  userId: string;\n  stream: MediaStream;\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n}\ninterface ChatState {\n  nickName: string;\n  message: string;\n  isMine?: boolean;\n}\ninterface RoomState {\n  isEnteredRoom: boolean;\n  isConnectedSocket: boolean;\n  userInfo: any | null;\n  participants: any[];\n  videos: VideoState[];\n  chatList: ChatState[];\n}\n\nconst initialState: RoomState = {\n  isEnteredRoom: false,\n  isConnectedSocket: false,\n  userInfo: null,\n  participants: [],\n  videos: [],\n  chatList: [],\n};\n\nexport const room = createModel<RootModel>()({\n  state: initialState,\n  selectors: (slice, createSelector) => ({\n    state: () => slice,\n    localVideoState: () =>\n      createSelector(slice, ({ userInfo, videos }) => {\n        if (userInfo) {\n          return videos.find((info) => info.userId === userInfo.userId);\n        }\n        return null;\n      }),\n  }),\n  reducers: {\n    updateSocketConnectionState(state, payload: boolean) {\n      state.isConnectedSocket = payload;\n      return state;\n    },\n    updateEnteredRoomState(state, payload: boolean) {\n      state.isEnteredRoom = payload;\n      return state;\n    },\n    setParticipants(state, payload: {}) {\n      const arr = values(payload);\n      state.participants = arr;\n      return state;\n    },\n    setUserInfo(state, payload: {}) {\n      state.userInfo = payload;\n      return state;\n    },\n    addVideo(state, payload: VideoState) {\n      state.videos.push(payload);\n      return state;\n    },\n    updateVideoEnabled(state, payload: { userId: string; enabled: boolean }) {\n      state.videos.forEach((video) => {\n        if (video.userId === payload.userId) {\n          video.videoEnabled = payload.enabled;\n        }\n      });\n      return state;\n    },\n    addChat(state, payload: ChatState) {\n      state.chatList.push(payload);\n      return state;\n    },\n  },\n  effects: (dispatch) => ({\n    incrementAsync(payload: number, state) {\n      dispatch.count.increment(payload);\n    },\n  }),\n});\n","import { init, RematchDispatch, RematchRootState } from '@rematch/core';\nimport { models, RootModel } from './models';\nimport immerPlugin from '@rematch/immer';\nimport selectPlugin from '@rematch/select';\n\nexport const store = init<RootModel>({\n  models,\n  plugins: [immerPlugin(), selectPlugin()],\n});\n\n// REF: https://rematchjs.org/docs/plugins/select/#3-selector-examples\nexport const { select } = store;\n\nexport type Store = typeof store;\nexport type Dispatch = RematchDispatch<RootModel>;\nexport type RootState = RematchRootState<RootModel>;\n","export default __webpack_public_path__ + \"static/media/bg-home.0e813f75.png\";","import { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Center, Button, VStack } from '@chakra-ui/react';\nimport { Heading } from '@chakra-ui/react';\nimport { getRandomRoomId } from 'modules/utils';\n\nimport './index.scss';\nimport bgImage from 'assets/img/bg-home.png';\n\nconst Home = () => {\n  const history = useHistory();\n  const handleEnterRoom = useCallback(() => {\n    const roomId = getRandomRoomId(3);\n    history.push(`/room/${roomId}`);\n  }, []);\n\n  return (\n    <Center h=\"80vh\" color=\"white\">\n      <VStack>\n        <Box w=\"500px\" color=\"white\" textAlign=\"center\">\n          <img src={bgImage} alt=\"화상회의 만들며 배우는 WebRTC\" />\n          <Heading mt={10} mb={10} textAlign=\"center\" fontSize={40} color=\"#000\">\n            화상회의 만들며 배우는 WebRTC\n          </Heading>\n\n          <Button w=\"260px\" colorScheme=\"yellow\" size=\"lg\" variant=\"solid\" onClick={handleEnterRoom}>\n            시작하기\n          </Button>\n        </Box>\n      </VStack>\n    </Center>\n  );\n};\n\nexport default Home;\n","import { v4 as uuidv4 } from 'uuid';\nimport { throttle } from 'lodash-es';\nimport randomWord from 'random-words';\n\nconst REPEAT_HOLD_TIME = 1000;\nconst THROTTLE_OPTIONS = {\n  trailing: false, // throttle 후행 이벤트 발동 설정\n};\n\n/**\n * UUID를 반환합니다.\n */\nexport const getUuid = () => {\n  return uuidv4();\n};\n\nexport const getRandomRoomId = (count: number = 1) => {\n  return randomWord(count).join('-');\n};\n\n/**\n * 이벤트 쓰로틀이 적용된 함수를 반환합니다.\n * @param func\n * @returns\n */\nexport const getThrottledFunc = (func: any) => {\n  return throttle(func, REPEAT_HOLD_TIME, THROTTLE_OPTIONS);\n};\n","import io from 'socket.io-client';\n\n// const SOCKET_SERVER = 'https://webrtclab.herokuapp.com';\nconst SOCKET_SERVER = 'http://localhost:3000';\n\nconst socket = io(SOCKET_SERVER);\n\nlet roomId: string | null = null;\nlet senderId: string | null = null;\nlet participants: any = null;\n\ntype SocketMessageTarget = 'all' | string;\n\nexport const sendMessage = ({ type, body, to = 'all' }: { type: string; body: any; to?: SocketMessageTarget }) => {\n  const data = {\n    roomId,\n    senderId,\n    to: to === 'all' ? to : findSocketId(to),\n    type,\n    body,\n  };\n\n  socket.send(data);\n  console.log('sendMessage :>> ', data);\n};\n\ninterface SocketInitData {\n  roomId: string;\n  userId: string;\n}\n\nexport const setParticipants = (data: any) => {\n  participants = data;\n};\n\nexport const setupBaseInfo = ({ roomId: id, userId }: SocketInitData) => {\n  roomId = id;\n  senderId = userId;\n};\n\nconst findSocketId = (userId: string) => {\n  // TODO: 소켓 서버 자체 배열화 필요\n  // return participants.find((data) => data.userId === userId);\n  let socketId = null;\n  if (participants) {\n    Object.keys(participants).forEach((key) => {\n      if (participants[key].userId === userId) {\n        socketId = participants[key].socketId;\n      }\n    });\n  }\n\n  return socketId;\n};\n\nexport default socket;\n","import EventEmitter from 'events';\n\nconst event = new EventEmitter();\n\nexport default event;\n","class Media {}\n\nexport default Media;\n","export const RTCPeerConnection = window.RTCPeerConnection;\nexport const RTCSessionDescription = window.RTCSessionDescription;\nexport const RTCIceCandidate = window.RTCIceCandidate;\nexport const getDefaultIceServers = () => [\n  {\n    urls: ['stun:stun.l.google.com:19302', 'stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302'],\n  },\n  {\n    urls: ['turn:107.150.19.220:3478'],\n    credential: 'turnserver',\n    username: 'subrosa',\n  },\n];\n","import EventEmitter from 'events';\nimport { RTCPeerConnection, RTCSessionDescription, RTCIceCandidate, getDefaultIceServers } from './helpers';\nimport { sendMessage } from './../socket';\n\ninterface ConnectionInfo {\n  targetUserId: string;\n  type: string;\n}\n\ninterface Peer extends ConnectionInfo {\n  pc: any;\n}\n\nclass Peer extends EventEmitter {\n  private localStream: any = null;\n  private peers: Peer[] = [];\n  private peerConnectionOptions: any = getDefaultIceServers();\n\n  /**\n   * 미디어 접근 후 커넥션 요청\n   */\n  async getUserMedia(constraints: any) {\n    try {\n      this.localStream = await navigator.mediaDevices.getUserMedia(constraints);\n    } catch (error) {\n      return new Promise((_, reject) => reject(error));\n    }\n\n    return this.localStream;\n  }\n\n  /**\n   * 커넥션 오퍼 전송을 시작을 합니다.\n   */\n  startRtcConnection({ targetUserId, type }: ConnectionInfo) {\n    const peer: Peer = this.createPeerConnection({ targetUserId, type });\n    this.createOffer(peer);\n  }\n\n  /**\n   * 피어 커넥션을 생성 합니다.\n   */\n  createPeerConnection({ targetUserId, type }: ConnectionInfo) {\n    console.log('[peer] createPeerConnection :>> ', targetUserId, type);\n\n    let peer = {\n      targetUserId,\n      type,\n      pc: null,\n    } as Peer;\n\n    peer.pc = new RTCPeerConnection(this.peerConnectionOptions);\n    console.log('[peer] new peer ', peer);\n\n    peer.pc.onicecandidate = (event: any) => {\n      if (event.candidate) {\n        sendMessage({\n          to: targetUserId,\n          type: 'signaling',\n          body: {\n            label: event.candidate.sdpMLineIndex,\n            id: event.candidate.sdpMid,\n            candidate: event.candidate.candidate,\n          },\n        });\n      } else {\n        console.info('[peer] candidate denied', event.candidate);\n      }\n    };\n\n    /**\n     * 크로스브라우징\n     */\n    if (peer.pc.ontrack) {\n      peer.pc.ontrack = (event: any) => {\n        console.log('ontrack', event);\n        const stream = event.streams[0];\n        this.emit('addRemoteStream', {\n          userId: peer.targetUserId,\n          stream: stream,\n        });\n      };\n\n      peer.pc.onremovetrack = (event: any) => {\n        console.log('onremovetrack', event);\n        const stream = event.streams[0];\n        this.emit('removeRemoteStream', {\n          userId: peer.targetUserId,\n          stream: stream,\n        });\n      };\n      // 삼성 모바일에서 필요\n    } else {\n      peer.pc.onaddstream = (event: any) => {\n        console.log('onaddstream', event);\n        this.emit('addRemoteStream', {\n          userId: peer.targetUserId,\n          stream: event.stream,\n        });\n      };\n\n      peer.pc.onremovestream = (event: any) => {\n        console.log('onremovestream', event);\n        this.emit('removeRemoteStream', {\n          userId: peer.targetUserId,\n          stream: event.stream,\n        });\n      };\n    }\n\n    // peer.pc.onnegotiationneeded = (event: any) => {\n    //   console.log('onnegotiationneeded', event);\n    // };\n\n    // peer.pc.onsignalingstatechange = (event: any) => {\n    //   console.log('onsignalingstatechange', event);\n    // };\n\n    peer.pc.oniceconnectionstatechange = (event: any) => {\n      console.log(\n        'oniceconnectionstatechange',\n        `iceGatheringState: ${peer.pc.iceGatheringState} / iceConnectionState: ${peer.pc.iceConnectionState}`\n      );\n\n      this.emit('iceConnectionStateChange', event);\n    };\n\n    this.peers.push(peer);\n\n    return peer;\n  }\n\n  /**\n   * offer SDP를 생성 한다.\n   */\n  createOffer(peer: Peer) {\n    console.log('[peer] createOffer', peer);\n\n    if (this.localStream) {\n      this.addTrack(peer, this.localStream); // addTrack 제외시 recvonly로 SDP 생성됨\n    }\n\n    peer.pc\n      .createOffer()\n      .then((SDP: any) => {\n        peer.pc.setLocalDescription(SDP);\n        console.log('Sending offer description', SDP);\n\n        sendMessage({\n          to: peer.targetUserId,\n          type: 'signaling',\n          body: {\n            peerType: peer.type,\n            sdp: SDP,\n          },\n        });\n      })\n      .catch((error: Error) => {\n        console.error('Error createOffer', error);\n      });\n  }\n\n  createAnswer(peer: Peer, offerSdp: any) {\n    console.log('[peer] createAnswer', peer, offerSdp);\n\n    if (this.localStream) {\n      this.addTrack(peer, this.localStream);\n    }\n\n    peer.pc\n      .setRemoteDescription(new RTCSessionDescription(offerSdp))\n      .then(() => {\n        peer.pc\n          .createAnswer()\n          .then((SDP: any) => {\n            peer.pc.setLocalDescription(SDP);\n            console.log('Sending answer to peer.', SDP);\n\n            sendMessage({\n              to: peer.targetUserId,\n              type: 'signaling',\n              body: {\n                peerType: peer.type,\n                sdp: SDP,\n              },\n            });\n          })\n          .catch((error: Error) => {\n            console.error('Error createAnswer', error);\n          });\n      })\n      .catch((error: Error) => {\n        console.error('Error setRemoteDescription', error);\n      });\n  }\n\n  signaling(message: any) {\n    console.log('[peer] signaling', message);\n\n    const body = message.body;\n    const sdp = body?.sdp;\n    const candidate = body?.candidate;\n\n    if (sdp) {\n      // offer sdp에 대한 answer peer 생성\n      if (sdp.type === 'offer') {\n        const peer = this.createPeerConnection({\n          targetUserId: message.senderId,\n          type: body.peerType,\n        });\n        this.createAnswer(peer, sdp);\n\n        // answer sdp 처리\n      } else if (sdp.type === 'answer') {\n        const peer = this.getPeer(message.senderId);\n        peer?.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n      }\n\n      // offer or answer cadidate처리\n    } else if (candidate) {\n      const peer = this.getPeer(message.senderId);\n      const iceCandidate = new RTCIceCandidate({\n        sdpMid: body.id,\n        sdpMLineIndex: body.label,\n        candidate: candidate,\n      });\n\n      peer?.pc.addIceCandidate(iceCandidate);\n    }\n  }\n\n  addTrack(peer: Peer, stream: any) {\n    if (peer.pc.addTrack) {\n      stream.getTracks().forEach((track: any) => {\n        peer.pc.addTrack(track, stream);\n      });\n    } else {\n      peer.pc.addStream(stream);\n    }\n  }\n\n  getPeer(targetUserId: string) {\n    return this.peers.find((peer) => peer.targetUserId === targetUserId);\n  }\n\n  getLocalStream() {\n    return this.localStream;\n  }\n\n  mute(type: 'video' | 'audio') {\n    console.log('mute :>> ', type);\n\n    if (type === 'video') {\n      this.localStream.getVideoTracks()[0].enabled = false;\n    } else {\n      this.localStream.getAudioTracks()[0].enabled = false;\n    }\n  }\n\n  unmute(type: 'video' | 'audio') {\n    console.log('unmute :>> ', type);\n\n    if (type === 'video') {\n      this.localStream.getVideoTracks()[0].enabled = true;\n    } else {\n      this.localStream.getAudioTracks()[0].enabled = true;\n    }\n  }\n}\n\nexport default Peer;\n","import Media from './media';\nimport Peer from './peer';\n\nexport const media = new Media();\nexport const peer = new Peer();\n","import React from 'react';\nimport './index.scss';\n\ninterface Props {\n  children: React.ReactNode;\n  id?: string;\n}\n\nconst PageTemplate = ({ children, id }: Props) => {\n  return (\n    <div className=\"page-template\" id={id}>\n      {children}\n    </div>\n  );\n};\n\nexport default PageTemplate;\n","import { useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\n\nimport socket, { setupBaseInfo, setParticipants } from 'modules/socket';\nimport event from 'modules/event';\n\nconst SocketContainer = ({ roomId }: { roomId: string }) => {\n  const { userInfo } = useSelector(select.room.state);\n  const dispatch = useDispatch<Dispatch>();\n\n  const onGateIn = useCallback(\n    (roomId: string, info: any) => {\n      console.log('gate', roomId, info);\n      dispatch.room.updateSocketConnectionState(true);\n      dispatch.room.setParticipants(info.participants);\n    },\n    [dispatch]\n  );\n\n  const onJoinUser = useCallback(\n    (roomId, data) => {\n      console.log('onJoinUser', roomId, data);\n\n      dispatch.room.setParticipants(data.participants);\n      setParticipants(data.participants);\n      event.emit('join', data);\n    },\n    [dispatch]\n  );\n\n  const onLeaveUser = useCallback(\n    (data) => {\n      console.log('onLeaveUser', data);\n\n      dispatch.room.setParticipants(data.participants);\n      setParticipants(data.participants);\n      event.emit('leave', data);\n    },\n    [dispatch]\n  );\n\n  const onMessage = useCallback((message: { type: string }) => {\n    console.log('onMessage', message);\n    event.emit(message.type, message);\n  }, []);\n\n  const bindSocket = useCallback(() => {\n    socket.emit('gate', roomId);\n    socket.on('gate', onGateIn);\n    socket.on('join', onJoinUser);\n    socket.on('leave', onLeaveUser);\n    socket.on('message', onMessage);\n  }, [roomId, onGateIn, onJoinUser, onLeaveUser, onMessage]);\n\n  useEffect(() => {\n    if (!userInfo) {\n      return;\n    }\n\n    setupBaseInfo({\n      roomId,\n      userId: userInfo.userId,\n    });\n  }, [userInfo]);\n\n  useEffect(() => {\n    bindSocket();\n  }, [bindSocket]);\n\n  return null;\n};\n\nexport default SocketContainer;\n","import { useCallback, useEffect, useRef } from 'react';\nimport { Flex, Box, Input, Button } from '@chakra-ui/react';\n\nimport { useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\nimport { peer } from 'modules/rtc';\nimport { getUuid } from 'modules/utils';\nimport socket from 'modules/socket';\n\nconst MEDIA_CONSTRAINTS = {\n  audio: false,\n  video: {\n    width: {\n      ideal: 320,\n      // ideal: 160,\n    },\n    height: {\n      ideal: 240,\n      // ideal: 120,\n    },\n    frameRate: {\n      ideal: 25,\n    },\n    // Select the front/user facing camera or the rear/environment facing camera if available (on Phone)\n    facingMode: 'user',\n  },\n};\n\nconst GateContainer = ({ roomId }: { roomId: string }) => {\n  const dispatch = useDispatch<Dispatch>();\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleEnterRoom = useCallback(() => {\n    const nickName = inputRef.current?.value;\n    if (!nickName) {\n      alert('닉네임을 입력해주세요!');\n      return;\n    }\n\n    const userInfo = {\n      userId: getUuid(),\n      nickName,\n      profileImg: 'profileImg',\n    };\n\n    socket.emit('enter', roomId, userInfo);\n    dispatch.room.setUserInfo(userInfo);\n    dispatch.room.updateEnteredRoomState(true);\n    window.localStorage.setItem('nickName', nickName);\n  }, [dispatch, roomId, inputRef]);\n\n  const handleKeyDown = useCallback((e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleEnterRoom();\n    }\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (!videoRef.current) {\n        return;\n      }\n\n      // 4:3 160x120\n      const stream = await peer.getUserMedia(MEDIA_CONSTRAINTS);\n      videoRef.current.srcObject = stream;\n    })();\n  }, []);\n\n  const defaultValue = window.localStorage.getItem('nickName') || '';\n\n  return (\n    <Box flex=\"1\" className=\"gate-container\">\n      <Flex h=\"90%\" color=\"white\" direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n        <Box w=\"260px\" textAlign=\"center\" color=\"facebook.900\">\n          <Box w=\"260px\" h=\"195px\" mb=\"6\" textAlign=\"center\" borderRadius=\"25px\" overflow=\"hidden\">\n            <video autoPlay ref={videoRef} />\n          </Box>\n          <Input\n            placeholder=\"닉네임을 입력해주세요!\"\n            maxLength={15}\n            mb=\"2\"\n            size=\"lg\"\n            defaultValue={defaultValue}\n            textAlign=\"center\"\n            ref={inputRef}\n            onKeyDown={handleKeyDown}\n            required\n          />\n          <Button colorScheme=\"yellow\" w=\"100%\" size=\"lg\" onClick={handleEnterRoom}>\n            입장하기\n          </Button>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default GateContainer;\n","import { useCallback, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\nimport { Flex, Box, Textarea, Button } from '@chakra-ui/react';\nimport { sendMessage } from 'modules/socket';\nimport event from 'modules/event';\n\nimport cn from 'classnames';\n\nconst ChatContainer = () => {\n  const { chatList, userInfo, participants } = useSelector(select.room.state);\n  const dispatch = useDispatch<Dispatch>();\n  const listWrapRef = useRef<HTMLDivElement>(null);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n\n  const handleScrollToBottom = useCallback(() => {\n    const $listWrap = listWrapRef.current;\n    if (!$listWrap) {\n      return;\n    }\n\n    $listWrap.scrollTop = $listWrap.scrollHeight;\n  }, [listWrapRef]);\n\n  const handleSendMessage = useCallback(() => {\n    const message = textRef.current?.value;\n\n    if (!textRef.current || !message) {\n      return;\n    }\n\n    dispatch.room.addChat({\n      isMine: true,\n      nickName: userInfo.nickName,\n      message,\n    });\n\n    sendMessage({\n      type: 'chat',\n      body: message,\n    });\n\n    textRef.current.value = '';\n    setTimeout(() => handleScrollToBottom(), 0);\n  }, [dispatch, userInfo.nickName, handleScrollToBottom]);\n\n  const handleKeyUp = useCallback(\n    (e) => {\n      if (e.shiftKey) {\n        return;\n      }\n\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleSendMessage();\n      }\n    },\n    [handleSendMessage]\n  );\n\n  // NOTE: 한글 마지막 글자 두번 처리되는이슈로 keydown에서도 이벤트 핸들링 필요\n  const handleKeyDown = useCallback((e) => {\n    if (e.shiftKey) {\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }, []);\n\n  const findParticipantInfo = useCallback(\n    (userId: string) => {\n      return participants.find((data) => data.userId === userId);\n    },\n    [participants]\n  );\n\n  useEffect(() => {\n    event.on('chat', ({ senderId, body }) => {\n      const nickName = findParticipantInfo(senderId)?.nickName ?? null;\n      if (nickName) {\n        dispatch.room.addChat({\n          nickName,\n          message: body,\n        });\n\n        setTimeout(() => handleScrollToBottom(), 0);\n      }\n    });\n  }, [dispatch]);\n\n  return (\n    <Box margin=\"6px 6px 0 6px\" bg=\"rgba(255,255,255,0.92)\" color=\"#000\" borderRadius=\"5px\" boxShadow=\"10px\">\n      <Flex direction=\"column\">\n        <Box className=\"chat-list-wrap\" padding=\"15px 12px 0 12px\" ref={listWrapRef}>\n          <ul>\n            {chatList.map(({ isMine, nickName, message }, i) => (\n              <li className={cn({ mine: isMine })} key={i}>\n                <p className=\"nickname\">{nickName}</p>\n                <p className=\"body\">{message}</p>\n              </li>\n            ))}\n          </ul>\n        </Box>\n        <Box className=\"chat-input-wrap\" bg=\"rgba(0,0,0,0.1)\" padding=\"5px\">\n          <Flex h=\"100%\" justifyContent=\"space-between\">\n            <Textarea\n              placeholder=\"메시지를 입력해주세요!\"\n              background=\"#fff\"\n              resize=\"none\"\n              onKeyDown={handleKeyDown}\n              onKeyUp={handleKeyUp}\n              ref={textRef}\n            />\n            <Button w=\"72px\" h=\"100%\" colorScheme=\"yellow\" variant=\"solid\" color=\"#fff\" onClick={handleSendMessage}>\n              Send\n            </Button>\n          </Flex>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ChatContainer;\n","import { useEffect, useRef } from 'react';\nimport { Box, Flex, Avatar, IconButton, Icon } from '@chakra-ui/react';\nimport { IoMdMicOff } from 'react-icons/io';\nimport './index.scss';\n\ninterface Props {\n  stream: any;\n  videoEnabled: boolean;\n  audioEnabled: boolean;\n  nickName: string;\n}\n\nconst PROFILE_URL = 'https://i.pinimg.com/originals/51/8f/df/518fdfc4f597e9c8efca678502a6c041.gif';\n\nconst PipVideo = ({ stream, videoEnabled, audioEnabled, nickName }: Props) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n\n  return (\n    <div className=\"pip-video\">\n      <video autoPlay ref={videoRef} />\n\n      <Box className=\"nickname\" as=\"span\" borderRadius=\"md\" bg=\"rgba(0,0,0,0.3)\" color=\"white\" px={2} minWidth=\"50px\">\n        {nickName}\n      </Box>\n\n      {!videoEnabled && (\n        <Flex className=\"video-off-visual\" w=\"100%\" h=\"100%\" justifyContent=\"center\" alignItems=\"center\">\n          <Avatar src={PROFILE_URL} size=\"xl\" />\n        </Flex>\n      )}\n\n      {!audioEnabled && (\n        <IconButton\n          className=\"audio-off-icon\"\n          borderRadius=\"5px\"\n          colorScheme=\"yellow\"\n          aria-label=\"button\"\n          fontSize=\"24px\"\n          disabled\n          icon={<Icon as={IoMdMicOff} />}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PipVideo;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dispatch, select } from 'store';\nimport { find } from 'lodash-es';\n\nimport socket, { sendMessage } from 'modules/socket';\nimport event from 'modules/event';\nimport { peer } from 'modules/rtc';\n\nimport { Flex, Box, HStack, Tooltip, IconButton, Icon, Grid } from '@chakra-ui/react';\nimport { PhoneIcon } from '@chakra-ui/icons';\nimport { IoMdMic, IoMdMicOff } from 'react-icons/io';\nimport { IoVideocam, IoVideocamOff } from 'react-icons/io5';\nimport PageTemplate from '../../components/layout/PageTemplate';\nimport SocketContainer from './containers/SocketContainer';\nimport GateContainer from './containers/GateContainer';\nimport ChatContainer from './containers/ChatContainer';\n\nimport PipVideo from './components/PipVideo';\n\nimport './index.scss';\n\ninterface PathParams {\n  roomId: string;\n}\n\nconst Room = () => {\n  const { roomId } = useParams<PathParams>();\n  const { isEnteredRoom, userInfo, participants, videos } = useSelector(select.room.state);\n  const localVideoState = useSelector(select.room.localVideoState);\n  const dispatch = useDispatch<Dispatch>();\n\n  const handleCamera = useCallback(() => {\n    if (!localVideoState) {\n      return;\n    }\n\n    if (localVideoState.videoEnabled) {\n      peer.mute('video');\n      dispatch.room.updateVideoEnabled({\n        userId: localVideoState.userId,\n        enabled: false,\n      });\n\n      sendMessage({\n        type: 'videoEnabled',\n        body: false,\n      });\n    } else {\n      peer.unmute('video');\n      dispatch.room.updateVideoEnabled({\n        userId: localVideoState.userId,\n        enabled: true,\n      });\n\n      sendMessage({\n        type: 'videoEnabled',\n        body: true,\n      });\n    }\n  }, [dispatch, localVideoState]);\n\n  const handleMic = useCallback(() => {\n    // do something\n  }, [roomId]);\n\n  const handleExit = useCallback(() => {\n    if (window.confirm('미팅에서 나가겠습니까?')) {\n      window.location.href = '/';\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!userInfo) {\n      return;\n    }\n\n    event.on('signaling', (data) => {\n      if (userInfo.userId !== data.senderId) {\n        peer.signaling(data);\n      }\n    });\n\n    event.on('join', (data) => {\n      const joinUserId = data.userInfo.userId;\n\n      if (userInfo.userId !== joinUserId) {\n        peer.startRtcConnection({\n          targetUserId: joinUserId,\n          type: 'userMedia',\n        });\n      }\n    });\n\n    event.on('videoEnabled', ({ senderId, body }) => {\n      console.log('videoEnabled :>> ', senderId, body);\n\n      dispatch.room.updateVideoEnabled({\n        userId: senderId,\n        enabled: body,\n      });\n    });\n  }, [dispatch, userInfo]);\n\n  useEffect(() => {\n    if (isEnteredRoom && !videos.length) {\n      dispatch.room.addVideo({\n        userId: userInfo.userId,\n        stream: peer.getLocalStream(),\n        videoEnabled: true,\n        audioEnabled: false,\n      });\n    }\n  }, [dispatch, userInfo, isEnteredRoom, videos]);\n\n  useEffect(() => {\n    peer.on('addRemoteStream', (mediaInfo: { userId: string; stream: MediaStream }) => {\n      dispatch.room.addVideo({\n        ...mediaInfo,\n        videoEnabled: true,\n        audioEnabled: false,\n      });\n    });\n  }, [dispatch]);\n\n  const gridCount = useMemo(() => (participants.length >= 4 ? 4 : participants.length), [participants]);\n\n  return (\n    <PageTemplate id=\"room\">\n      <SocketContainer roomId={roomId} />\n\n      {isEnteredRoom ? (\n        <Flex h=\"100%\" color=\"white\" direction=\"column\">\n          <Box flex=\"2\">\n            <Flex h=\"100%\" color=\"white\" direction=\"row\">\n              <Box w=\"100%\" padding=\"10px\" bg=\"#202123\">\n                <Flex h=\"100%\" alignItems=\"center\" justifyContent=\"center\">\n                  <Grid templateColumns={`repeat(${gridCount}, 1fr)`} gap={3} alignItems=\"center\">\n                    {participants.map(({ userId, nickName }, i) => {\n                      const mediaInfo = find(videos, { userId });\n                      // TODO: mediaInfo 타입 처리 필요\n                      return (\n                        <PipVideo\n                          stream={mediaInfo?.stream}\n                          videoEnabled={!!mediaInfo?.videoEnabled}\n                          audioEnabled={!!mediaInfo?.audioEnabled}\n                          nickName={nickName}\n                          key={i}\n                        />\n                      );\n                    })}\n                  </Grid>\n                </Flex>\n              </Box>\n              <Box w=\"450px\" h=\"100%\" bg=\"#202123\">\n                <ChatContainer />\n              </Box>\n            </Flex>\n          </Box>\n\n          <Box h=\"80px\" bg=\"black\">\n            <Flex h=\"100%\" color=\"white\" justifyContent=\"center\" alignItems=\"center\">\n              <HStack spacing={4}>\n                <Tooltip label=\"카메라\" aria-label=\"카메라\">\n                  <IconButton\n                    borderRadius=\"5px\"\n                    colorScheme=\"whiteAlpha\"\n                    aria-label=\"button\"\n                    fontSize=\"22px\"\n                    icon={localVideoState?.videoEnabled ? <Icon as={IoVideocam} /> : <Icon as={IoVideocamOff} />}\n                    onClick={handleCamera}\n                  />\n                </Tooltip>\n                <Tooltip label=\"마이크\" aria-label=\"마이크\">\n                  <IconButton\n                    borderRadius=\"5px\"\n                    colorScheme=\"whiteAlpha\"\n                    aria-label=\"button\"\n                    fontSize=\"22px\"\n                    // disabled\n                    icon={localVideoState?.audioEnabled ? <Icon as={IoMdMic} /> : <Icon as={IoMdMicOff} />}\n                    onClick={handleMic}\n                  />\n                </Tooltip>\n                <Tooltip label=\"나가기\" aria-label=\"나가기\">\n                  <IconButton\n                    borderRadius=\"5px\"\n                    colorScheme=\"red\"\n                    aria-label=\"button\"\n                    icon={<PhoneIcon />}\n                    onClick={handleExit}\n                  />\n                </Tooltip>\n              </HStack>\n            </Flex>\n          </Box>\n        </Flex>\n      ) : (\n        <Flex h=\"100%\" color=\"white\" direction=\"column\">\n          <GateContainer roomId={roomId} />\n        </Flex>\n      )}\n    </PageTemplate>\n  );\n};\n\nexport default Room;\n","import { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { store } from './store';\nimport Home from 'pages/Home';\nimport Room from 'pages/Room';\n\nconst basename = `${process.env.REACT_APP_NAME}`;\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ChakraProvider>\n        <Router basename={basename}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/room/:roomId\" component={Room} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Router>\n      </ChakraProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}